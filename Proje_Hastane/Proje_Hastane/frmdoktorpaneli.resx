<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>